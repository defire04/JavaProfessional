RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: 
IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO 
CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE 
Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN 
FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL 
CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS 
“jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, 
I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP 
TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE 
ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD 
YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT 
TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN 
DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL 
TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH 
ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL 
AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO 
ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A 
LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, 
WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY 
UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS 
A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON 
ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE 
IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME 
MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS 
ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE 
TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY 
FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF 
ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE 
AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE 
ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. 
AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH 
CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE 
PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN 
TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG 
ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN 
RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: 
IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO 
CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE 
Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN 
FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL 
CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS 
“jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, 
I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP 
TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE 
ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD 
YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT 
TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN 
DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL 
TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH 
ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL 
AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO 
ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A 
LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, 
WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY 
UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS 
A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON 
ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE 
IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME 
MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS 
ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE 
TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY 
FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF 
ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE 
AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE 
ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. 
AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH 
CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE 
PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN 
TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG 
ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN 
RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: 
IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO 
CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE 
Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN 
FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL 
CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS 
“jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, 
I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP 
TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE 
ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD 
YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT 
TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN 
DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL 
TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH 
ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL 
AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO 
ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A 
LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, 
WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY 
UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS 
A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON 
ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE 
IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME 
MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS 
ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE 
TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY 
FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF 
ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE 
AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE 
ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. 
AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH 
CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE 
PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN 
TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG 
ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN 
RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE 
RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. 
I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. BuT AS TimE PasseD AnD 
I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR 
LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT 
TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF 
OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE 
AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 
OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR 
IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO 
EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN 
FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS 
OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS 
AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC 
(VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN 
VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS 
MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE 
YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR 
DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF 
ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF 
Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, 
“WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN 
CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN 
DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN 
SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON TO WraP ManY OF ThE 
CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT 
TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD 
EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO “show-stopper.” SO DespitE ThE PerformancE 
ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY MorE ProductivE ProgrammerS. IN AlL 
Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG ThE ProgramS ON DifferenT TypeS 
OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH BetweeN PeoplE. I ThinK ThaT 
ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG LargE QuantitieS OF BitS ArounD. 
WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE EasilY: One-on-onE, BuT AlsO IN 
GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH IN ManY SenseS IT IS. 
BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT ThE FundamentaL IntenT OF ThiS 
LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS AbouT ManaginG ComplexitY: ThE ComplexitY 
OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN WhicH IT IS SolveD. BecausE 
OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG LanguageS OF WhicH I AM 
AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD BE TO ConqueR ThE ComplexitY 
OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY IN MinD, BuT AT SomE 
PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE MiX. InevitablY, ThosE OtheR IssueS 
ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ HaD TO BE Backwards-compatiblE WitH 
C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH VerY UsefuL GoalS AnD AccounT 
FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS SomE ProjectS FroM BeinG FinisheD 
(certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG YouR MistakeS, WhY Shouldn’T It?). 
AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO BE AN ExtensiblE LanguagE, SO 
AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE WitH AwK, SeD, GreP, AnD 
OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN AccuseD OF ProducinG “write-onlY Code” 
(thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, PerL, AnD OtheR LanguageS LikE 
SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS A ResulT ArE RemarkablY SuccessfuL 
IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE TO UnderstanD JavA IS ThaT 
SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL OF ReducinG ComplexitY FoR ThE 
ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG RobusT Code.” IN ThE EarlY 
DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD OveR Time), BuT IT HaS 
IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS TO CreatE AN EquivalenT C++ 
PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T StoP TherE. IT GoeS ON 
TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD NetworK ProgramminG, IN LanguagE FeatureS 
OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE ReallY BiG ComplexitY ProblemS: Cross-platforM 
ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY SpectruM AnywherE FroM “impediment” TO 
“show-stopper.” SO DespitE ThE PerformancE ProblemS ThaT We’vE SeeN, ThE PromisE OF JavA IS TremendouS: IT CaN MakE US SignificantlY 
MorE ProductivE ProgrammerS. IN AlL Ways—creatinG ThE ProgramS, WorkinG IN TeamS, BuildinG UseR InterfaceS TO CommunicatE WitH ThE UseR, RunninG 
ThE ProgramS ON DifferenT TypeS OF MachineS, AnD EasilY WritinG ProgramS ThaT CommunicatE AcrosS ThE Internet—JavA IncreaseS ThE CommunicatioN BandwidtH 
BetweeN PeoplE. I ThinK ThaT ThE ResultS OF ThE CommunicatioN RevolutioN MaY NoT BE SeeN FroM ThE EffectS OF MovinG 
LargE QuantitieS OF BitS ArounD. WE ShalL SeE ThE TruE RevolutioN BecausE WE WilL AlL CommunicatE WitH EacH OtheR MorE 
EasilY: One-on-onE, BuT AlsO IN GroupS AnD AS A PlaneT. I OriginallY ApproacheD JavA AS “jusT AnotheR ProgramminG Language,” WhicH 
IN ManY SenseS IT IS. BuT AS TimE PasseD AnD I StudieD IT MorE DeeplY, I BegaN TO SeE ThaT 
ThE FundamentaL IntenT OF ThiS LanguagE WaS DifferenT FroM OtheR LanguageS I HaD SeeN UP TO ThaT PoinT. ProgramminG IS 
AbouT ManaginG ComplexitY: ThE ComplexitY OF ThE ProbleM YoU WanT TO SolvE, LaiD UpoN ThE ComplexitY OF ThE MachinE IN 
WhicH IT IS SolveD. BecausE OF ThiS ComplexitY, MosT OF OuR ProgramminG ProjectS FaiL. AnD YeT, OF AlL ThE ProgramminG 
LanguageS OF WhicH I AM AwarE, AlmosT NonE HavE GonE AlL OuT AnD DecideD ThaT TheiR MaiN DesigN GoaL WoulD 
BE TO ConqueR ThE ComplexitY OF DevelopinG AnD MaintaininG Programs.1 OF CoursE, ManY LanguagE DesigN DecisionS WerE MadE WitH ComplexitY 
IN MinD, BuT AT SomE PoinT TherE WerE AlwayS OtheR IssueS ThaT WerE ConsidereD EssentiaL TO BE AddeD IntO ThE 
MiX. InevitablY, ThosE OtheR IssueS ArE WhaT CausE ProgrammerS TO EventuallY “hiT ThE Wall” WitH ThaT LanguagE. FoR ExamplE, C++ 
HaD TO BE Backwards-compatiblE WitH C (tO AlloW EasY MigratioN FoR C Programmers), AS WelL AS EfficienT. ThosE ArE BotH 
VerY UsefuL GoalS AnD AccounT FoR MucH OF ThE SuccesS OF C++, BuT TheY AlsO ExposE ExtrA ComplexitY ThaT PreventS 
SomE ProjectS FroM BeinG FinisheD (certainlY, YoU CaN BlamE ProgrammerS AnD ManagemenT, BuT IF A LanguagE CaN HelP BY CatchinG 
YouR MistakeS, WhY Shouldn’T It?). AS AnotheR ExamplE, VisuaL BASIC (VB) WaS TieD TO BASIC, WhicH Wasn’T ReallY DesigneD TO 
BE AN ExtensiblE LanguagE, SO AlL ThE ExtensionS PileD UpoN VB HavE ProduceD SomE TrulY UnmaintainablE SyntaX. PerL IS Backwards-compatiblE 
WitH AwK, SeD, GreP, AnD OtheR UniX ToolS IT WaS MeanT TO ReplacE, AnD AS A ResulT IT IS OfteN 
AccuseD OF ProducinG “write-onlY Code” (thaT IS, AfteR A WhilE YoU Can’T ReaD It). ON ThE OtheR HanD, C++, VB, 
PerL, AnD OtheR LanguageS LikE SmalltalK HaD SomE OF TheiR DesigN EffortS FocuseD ON ThE IssuE OF ComplexitY AnD AS 
A ResulT ArE RemarkablY SuccessfuL IN SolvinG CertaiN TypeS OF ProblemS. WhaT HaS ImpresseD ME MosT AS I HavE ComE 
TO UnderstanD JavA IS ThaT SomewherE IN ThE MiX OF Sun’S DesigN ObjectiveS, IT SeemS ThaT TherE WaS A GoaL 
OF ReducinG ComplexitY FoR ThE ProgrammeR. AS IF TO SaY, “WE CarE AbouT ReducinG ThE TimE AnD DifficultY OF ProducinG 
RobusT Code.” IN ThE EarlY DayS, ThiS GoaL ResulteD IN CodE ThaT Didn’T RuN VerY FasT (althougH ThiS HaS ImproveD 
OveR Time), BuT IT HaS IndeeD ProduceD AmazinG ReductionS IN DevelopmenT Time—halF OR LesS OF ThE TimE ThaT IT TakeS 
TO CreatE AN EquivalenT C++ PrograM. ThiS ResulT AlonE CaN SavE IncrediblE AmountS OF TimE AnD MoneY, BuT JavA Doesn’T 
StoP TherE. IT GoeS ON TO WraP ManY OF ThE CompleX TaskS ThaT HavE BecomE ImportanT, SucH AS MultithreadinG AnD 
NetworK ProgramminG, IN LanguagE FeatureS OR LibrarieS ThaT CaN AT TimeS MakE ThosE TaskS EasY. AnD FinallY, IT TackleS SomE 
ReallY BiG ComplexitY ProblemS: Cross-platforM ProgramS, DynamiC CodE ChangeS, AnD EveN SecuritY, EacH OF WhicH CaN FiT ON YouR ComplexitY 
